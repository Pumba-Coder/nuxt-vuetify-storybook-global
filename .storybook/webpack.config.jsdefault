module.exports = { mode: 'development',
  bail: false,
  devtool: '#cheap-module-source-map',
  entry:
   [ 'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\@storybook\\core\\dist\\server\\common\\polyfills.js',
     'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\@storybook\\core\\dist\\server\\preview\\globals.js',
     'C:\\R+D Source\\storybook-vuetify-nuxt\\.storybook\\config.js',
     'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\webpack-hot-middleware\\client.js?reload=true&quiet=true' ],
  output:
   { path:
      'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\@storybook\\core\\dist\\public',
     filename: '[name].[hash].bundle.js',
     publicPath: '' },
  plugins:
   [ HtmlWebpackPlugin {
       options:
        { template:
           'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\@storybook\\core\\dist\\server\\templates\\index.ejs',
          templateContent: false,
          templateParameters: [Function: templateParameters],
          filename: 'iframe.html',
          hash: false,
          inject: false,
          compile: true,
          favicon: false,
          minify: 'auto',
          cache: true,
          showErrors: true,
          chunks: 'all',
          excludeChunks: [],
          chunksSortMode: 'none',
          meta: {},
          base: false,
          title: 'Webpack App',
          xhtml: false,
          alwaysWriteToDisk: true },
       childCompilerHash: undefined,
       childCompilationOutputName: undefined,
       assetJson: undefined,
       hash: undefined,
       version: 4 },
     DefinePlugin {
       definitions:
        { 'process.env':
           { NODE_ENV: '"development"', NODE_PATH: '""', PUBLIC_URL: '"."' },
          NODE_ENV: '"development"' } },
     WatchMissingNodeModulesPlugin {
       nodeModulesPath: 'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules' },
     HotModuleReplacementPlugin {
       options: {},
       multiStep: undefined,
       fullBuildTimeout: 200,
       requestTimeout: 10000 },
     CaseSensitivePathsPlugin { options: {}, pathCache: {}, fsOperations: 0, primed: false },
     ProgressPlugin {
       profile: false,
       handler: undefined,
       modulesCount: 500,
       showEntries: false,
       showModules: true,
       showActiveModules: true },
     DefinePlugin { definitions: {} },
     NormalModuleReplacementPlugin { resourceRegExp: /core-js/, newResource: [Function] },
     VueLoaderPlugin {} ],
  module:
   { rules:
      [ { test: /\.(mjs|jsx?)$/,
          use:
           [ { loader: 'babel-loader',
               options:
                { cacheDirectory:
                   'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\.cache\\storybook',
                  presets:
                   [ [ 'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\@babel\\preset-env\\lib\\index.js',
                       { shippedProposals: true, useBuiltIns: 'usage', corejs: '3' } ],
                     'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\babel-preset-vue\\dist\\babel-preset-vue.cjs.js' ],
                  plugins:
                   [ 'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\@babel\\plugin-proposal-object-rest-spread\\lib\\index.js',
                     'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\@babel\\plugin-proposal-class-properties\\lib\\index.js',
                     'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\@babel\\plugin-syntax-dynamic-import\\lib\\index.js',
                     [ 'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\babel-plugin-emotion\\dist\\babel-plugin-emotion.cjs.js',
                       { sourceMap: true, autoLabel: true } ],
                     'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\babel-plugin-macros\\dist\\index.js' ] } } ],
          include: [ 'C:\\R+D Source\\storybook-vuetify-nuxt' ],
          exclude: [ 'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules' ] },
        { test: /\.md$/,
          use:
           [ { loader:
                'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\raw-loader\\dist\\cjs.js' } ] },
        { test: /\.vue$/,
          loader:
           'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\vue-loader\\lib\\index.js',
          options: {} },
        { test: /\.css$/,
          sideEffects: true,
          use:
           [ 'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\@storybook\\core\\node_modules\\style-loader\\index.js',
             { loader:
                'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\css-loader\\dist\\cjs.js',
               options: { importLoaders: 1 } },
             { loader:
                'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\postcss-loader\\src\\index.js',
               options:
                { ident: 'postcss', postcss: {}, plugins: [Function: plugins] } } ] },
        { test:
           /\.(svg|ico|jpg|jpeg|png|gif|eot|otf|webp|ttf|woff|woff2|cur|ani|pdf)(\?.*)?$/,
          loader:
           'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\@storybook\\core\\node_modules\\file-loader\\dist\\cjs.js',
          query: { name: 'static/media/[name].[hash:8].[ext]' } },
        { test: /\.(mp4|webm|wav|mp3|m4a|aac|oga)(\?.*)?$/,
          loader:
           'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\url-loader\\dist\\cjs.js',
          query: { limit: 10000, name: 'static/media/[name].[hash:8].[ext]' } } ] },
  resolve:
   { extensions: [ '.mjs', '.js', '.jsx', '.json', '.vue' ],
     modules: [ 'node_modules' ],
     alias:
      { 'babel-runtime/core-js/object/assign':
         'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\@storybook\\core\\node_modules\\core-js\\es\\object\\assign.js',
        react:
         'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\react',
        'react-dom':
         'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\react-dom',
        'vue$':
         'C:\\R+D Source\\storybook-vuetify-nuxt\\node_modules\\vue\\dist\\vue.esm.js' } },
  optimization:
   { splitChunks: { chunks: 'all' },
     runtimeChunk: true,
     minimizer:
      [ TerserPlugin {
          options:
           { test: /\.m?js(\?.*)?$/i,
             chunkFilter: [Function: chunkFilter],
             warningsFilter: [Function: warningsFilter],
             extractComments: false,
             sourceMap: true,
             cache: true,
             cacheKeys: [Function: cacheKeys],
             parallel: true,
             include: undefined,
             exclude: undefined,
             minify: undefined,
             terserOptions:
              { output: { comments: /^\**!|@preserve|@license|@cc_on/i },
                mangle: false,
                keep_fnames: true } } } ] },
  performance: { hints: false } }